server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /opt/public;

    # allow access to /.well-known through HTTP
    location /.well-known {
        try_files $uri $uri/ =404;
    }

    # redirect all other requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    error_log /dev/stdout info;
    access_log /dev/stdout;
}

server {
    # Listen to HTTPS on 443 and allow HTTP/2
    listen 443 ssl http2 default;
    listen [::]:443 ssl http2 default ipv6only=on;

    # Path to the chain and privkey (Let's Encrypt)
    ssl_certificate /certs/fullchain.pem;
    ssl_certificate_key /certs/privkey.pem;

    # Improve HTTPS performance with session resumption
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Enable server-side protection against BEAST attacks
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # Diffie-Hellman parameter for DHE ciphersuites
    # $ openssl dhparam -out dhparam.pem 4096
    ssl_dhparam /certs/dhparam.pem;

    # Enable OCSP stapling (http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox)
    # uses Google DNS servers
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /certs/fullchain.pem;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout 2s;

	root /opt/public;
	index index.php;

	# Make site accessible from http://localhost/
	server_name _;
	
	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

	# Add stdout logging
	error_log /dev/stdout info;
	access_log /dev/stdout;

	# block access to sensitive information about git
	location /.git {
       deny all;
       return 403;
    }

	location / {
	    # redirect all to index
		try_files $uri $uri/ /index.php?$query_string;
	}

	# pass the PHP scripts to FastCGI server listening on socket
	location ~ \.php$ {
        try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_index index.php;
		include fastcgi_params;
	}

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp|tiff|ttf|svg)$ {
        expires           5d;
    }

	# deny access to . files, for security
	location ~ /\. {
        log_not_found off;
        deny all;
	}
        
	location ^~ /.well-known {
        allow all;
        auth_basic off;
    }
}
